generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  MANAGER
  CASE_MANAGER
}

enum Access_level {
  VIEW_ONLY
  MANAGE
}

model User {
  id          String       @id @default(uuid())
  name        String
  email       String       @unique
  password    String
  role        Role         @default(CASE_MANAGER)
  cases       Case[]  
  case_access Case_access[]
  created_at  DateTime    @default(now())
  updated_at  DateTime    @updatedAt
}

model Client {
  id              String        @id @default(uuid())
  first_name      String
  last_name       String
  dob             DateTime
  email           String        @unique
  phone           String
  address         String
  cases           Case[]
  referral_date   DateTime
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
}

model Case {
  id                String       @id @default(uuid())
  client            Client       @relation(fields: [client_id], references: [id])
  client_id         String          
  case_manager      User       @relation(fields: [case_manager_id], references: [id])
  case_manager_id   String
  status            String
  openedAt          DateTime     @default(now())
  closedAt          DateTime?
  tasks             Task[]
  case_access       Case_access[]
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt
}

model Case_access {
  id              String       @id @default(uuid())
  user            User         @relation(fields: [user_id], references: [id])
  user_id         String
  case            Case         @relation(fields: [case_id], references: [id])
  case_id         String      
  access_level    Access_level
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
}

model Task {
  id              String       @id @default(uuid())
  case            Case         @relation(fields: [case_id], references: [id])
  case_id         String
  description     String
  due_date        DateTime
  is_complete     Boolean
  completed_at    DateTime?
}